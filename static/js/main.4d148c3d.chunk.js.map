{"version":3,"sources":["App.js","index.js"],"names":["pages","drawerWidth","DrawerHeader","styled","display","alignItems","justifyContent","darkTheme","createTheme","palette","mode","lightTheme","App","userPrefernce","window","matchMedia","matches","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","_React$useState3","_React$useState4","darkMode","setDarkMode","react_default","a","createElement","ThemeProvider","theme","CssBaseline","Grid","container","direction","IconButton","color","aria-label","onClick","size","sx","objectSpread","mr","Menu_default","FormControlLabel","label","control","Switch","onChange","defaultChecked","labelPlacement","Drawer","width","flexShrink","& .MuiDrawer-paper","boxSizing","variant","anchor","ChevronLeft_default","List","Divider","map","text","index","Fragment","ListItem","key","disablePadding","ListItemButton","ListItemText","primary","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"uVAMMA,EAAQ,CAAC,OAAQ,aAAc,aAAc,SAC7CC,EAAc,IAEdC,EAAeC,YAAO,MAAPA,CAAc,iBAAO,CACxCC,QAAS,OACTC,WAAY,SACZC,eAAgB,cAGZC,EAAYC,YAAY,CAC5BC,QAAS,CACPC,KAAM,UAIJC,EAAaH,YAAY,CAC7BC,QAAS,CACPC,KAAM,WA0EKE,MAtEf,WACE,IAAMC,EAAgBC,OAAOC,WAAW,gCAAgCC,QAD3DC,EAEWC,IAAMC,UAAS,GAF1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GAENM,EAFMH,EAAA,GAEAI,EAFAJ,EAAA,GAAAK,EAGmBP,IAAMC,SAASN,GAHlCa,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGNE,EAHMD,EAAA,GAGIE,EAHJF,EAAA,GAab,OACEG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeC,MAAON,EAAWpB,EAAYI,GAC3CkB,EAAAC,EAAAC,cAACG,EAAA,EAAD,MACAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAW,MAAOhC,WAAW,aAAaC,eAAgB,iBACxEuB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,cACXC,QAfe,WACrBjB,GAAQ,IAeFkB,KAAK,QACLC,GAAEtB,OAAAuB,EAAA,EAAAvB,CAAA,CAAIwB,GAAI,GAAOtB,GAAQ,CAAEnB,QAAS,UAEpCyB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,OAEFD,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAkBC,MAAOrB,EAAW,OAAS,QAASsB,QAASpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAQC,SAAU,kBAAMvB,GAAaD,IAAWyB,gBAAc,IAAKC,eAAe,SAEnJxB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEX,GAAI,CACFY,MAAOtD,EACPuD,WAAY,EACZC,qBAAsB,CACpBF,MAAOtD,EACPyD,UAAW,eAGfC,QAAQ,aACRC,OAAO,OACPrC,KAAMA,GAENM,EAAAC,EAAAC,cAAC7B,EAAD,KACE2B,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAYG,QAjCI,WACtBjB,GAAQ,IAgCoCkB,KAAK,SACzCb,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,QAGJD,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACAjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,MACG/D,EAAMgE,IAAI,SAACC,EAAMC,GAAP,OACTrC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqC,SAAA,KACAtC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAUC,IAAKJ,EAAMK,gBAAc,GACjCzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,KACE1C,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAcC,QAASR,MAG3BpC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,SAGFlC,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAUC,IAAI,UAAUC,gBAAc,GACpCzC,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAgB9B,QAAS,kBAAM3B,OAAOS,KAAK,8CACzCM,EAAAC,EAAAC,cAACyC,EAAA,EAAD,CAAcC,QAAQ,cAG1B5C,EAAAC,EAAAC,cAACgC,EAAA,EAAD,UCtFGW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjD,EAAAC,EAAAC,cAACF,EAAAC,EAAMiD,WAAP,KACElD,EAAAC,EAAAC,cAACiD,EAAD","file":"static/js/main.4d148c3d.chunk.js","sourcesContent":["import React from 'react';\nimport { createTheme, CssBaseline, Divider, Drawer, FormControlLabel, Grid, IconButton, List, ListItem, ListItemButton, ListItemText, styled, Switch, ThemeProvider,} from '@mui/material';\n\nimport MenuIcon from '@mui/icons-material/Menu';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\n\nconst pages = ['Home', 'Experience', 'Fun Things', 'Games'];\nconst drawerWidth = 240;\n\nconst DrawerHeader = styled('div')(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'flex-end',\n}));\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  }\n});\n\nconst lightTheme = createTheme({\n  palette: {\n    mode: 'light',\n  }\n});\n\nfunction App() {\n  const userPrefernce = window.matchMedia('(prefers-color-scheme: dark)').matches;\n  const [open, setOpen] = React.useState(false);\n  const [darkMode, setDarkMode] = React.useState(userPrefernce);\n\n  const handleMenuOpen = () => {\n    setOpen(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n      <CssBaseline />\n      <Grid container direction={'row'} alignItems='flex-start' justifyContent={'space-between'}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleMenuOpen}\n          size='large'\n          sx={{ mr: 2, ...(open && { display: 'none' }) }}\n        >\n          <MenuIcon />\n        </IconButton>\n        <FormControlLabel label={darkMode ? 'Dark' : 'Light'} control={<Switch onChange={() => setDarkMode(!darkMode)} defaultChecked />} labelPlacement='end' />\n      </Grid>\n      <Drawer\n        sx={{\n          width: drawerWidth,\n          flexShrink: 0,\n          '& .MuiDrawer-paper': {\n            width: drawerWidth,\n            boxSizing: 'border-box',\n          },\n        }}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n      >\n        <DrawerHeader>\n          <IconButton onClick={handleMenuClose} size='large'>\n            <ChevronLeftIcon />\n          </IconButton>\n        </DrawerHeader>\n        <List>\n        <Divider />\n          {pages.map((text, index) => (\n            <>\n            <ListItem key={text} disablePadding>\n              <ListItemButton>\n                <ListItemText primary={text} />\n              </ListItemButton>\n            </ListItem>\n            <Divider />\n            </>\n          ))}\n          <ListItem key='Connect' disablePadding>\n            <ListItemButton onClick={() => window.open('https://www.linkedin.com/in/john-rosner/')}>\n              <ListItemText primary='Connect' />\n            </ListItemButton>\n          </ListItem>\n          <Divider />\n        </List>\n      </Drawer>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}